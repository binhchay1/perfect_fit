name: CI/CD Pipeline Perfect Fit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, bcmath, pdo_mysql, redis
        coverage: xdebug
    
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install PHP dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Copy .env.example to .env
      run: cp .env.example .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Setup database
      run: |
        php artisan migrate --force
        php artisan db:seed --force
    
    - name: Run tests
      run: |
        php artisan config:clear
        php artisan cache:clear
        vendor/bin/phpunit --coverage-text

  deploy:
    needs: test
    name: Deploy to production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Navigate to project directory
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: cd /home/perfect_fit/public
    
    - name: Pull latest code
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/perfect_fit/public
          git pull origin main
    
    - name: Install PHP dependencies
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/perfect_fit/public
          composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Run database migrations
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/perfect_fit/public
          php artisan migrate --force
    
    - name: Clear and cache config
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/perfect_fit/public
          php artisan config:clear
          php artisan config:cache
          php artisan route:clear
          php artisan route:cache
          php artisan view:clear
          php artisan view:cache
    
    - name: Restart services
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          sudo systemctl restart nginx
          sudo systemctl restart php8.3-fpm
          # Optional: Restart queue worker if you have queues
          # php artisan queue:restart
